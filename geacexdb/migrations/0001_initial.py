# Generated by Django 4.1.3 on 2022-11-25 11:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import localflavor.es.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('es_centro', models.BooleanField(default=False)),
                ('es_tutor', models.BooleanField(default=False)),
                ('es_proveedor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Actividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20)),
                ('min_alumnos', models.PositiveSmallIntegerField()),
                ('max_alumnos', models.PositiveSmallIntegerField()),
                ('precio', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20)),
                ('apellido1', models.CharField(max_length=20)),
                ('apellido2', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[('3INF', '3 años infantil'), ('4INF', '4 años infantil'), ('5INF', '5 años infantil'), ('1PRI', '1º primaria'), ('2PRI', '2º primaria'), ('3PRI', '3º primaria'), ('4PRI', '4º primaria'), ('5PRI', '5º primaria'), ('6PRI', '6º primaria')], max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Franja',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('L', 'lunes'), ('M', 'martes'), ('X', 'miercoles'), ('J', 'jueves'), ('V', 'viernes'), ('S', 'sabado'), ('D', 'domingo')], max_length=1)),
                ('hora', models.CharField(choices=[('08', '08:00-09:00'), ('09', '09:00-10:00'), ('10', '10:00-11:00'), ('11', '11:00-12:00'), ('12', '12:00-13:00'), ('13', '13:00-14:00'), ('14', '14:00-15:00'), ('15', '15:00-16:00'), ('16', '16:00-17:00'), ('17', '17:00-18:00'), ('18', '18:00-19:00'), ('19', '19:00-20:00'), ('20', '20:00-21:00'), ('21', '21:00-22:00')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Centro',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('provincia', models.CharField(max_length=20)),
                ('localidad', models.CharField(max_length=50)),
                ('codigo', models.PositiveIntegerField(blank=True, null=True)),
                ('cursos', models.ManyToManyField(to='geacexdb.curso')),
            ],
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nif', localflavor.es.models.ESIdentityCardNumberField(max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=40)),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geacexdb.actividad')),
                ('alumnos', models.ManyToManyField(to='geacexdb.alumno')),
                ('franja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geacexdb.franja')),
            ],
        ),
        migrations.AddField(
            model_name='alumno',
            name='curso',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geacexdb.curso'),
        ),
        migrations.AddField(
            model_name='actividad',
            name='cursos',
            field=models.ManyToManyField(to='geacexdb.curso'),
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('dni', localflavor.es.models.ESIdentityCardNumberField(max_length=9)),
                ('centro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geacexdb.centro')),
            ],
        ),
        migrations.CreateModel(
            name='Calendario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('año', models.PositiveSmallIntegerField()),
                ('dia_inicio', models.DateField()),
                ('dia_final', models.DateField()),
                ('plazo_preinscripcion', models.BooleanField()),
                ('franjas', models.ManyToManyField(to='geacexdb.franja')),
                ('centro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geacexdb.centro')),
            ],
        ),
        migrations.AddField(
            model_name='alumno',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geacexdb.tutor'),
        ),
        migrations.AddField(
            model_name='actividad',
            name='proveedor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geacexdb.proveedor'),
        ),
    ]
